# This is a basic workflow to help you get started with Actions

name: release-build-upload

# Controls when the workflow will run
on: 
  release:
    types: [ created ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            ./go.sum
            ./go.sum

      - name: build
        run: |
          # 替换 VERSION_NO
          (Get-Content main.go) -replace 'VERSION_NO', $env:GITHUB_REF_NAME | Set-Content main.go

          # 替换 BUILD_TIME 为当前时间
          $buildTime = Get-Date -Format "yyyy-MM-ddTHH:mm:ss"
          (Get-Content main.go) -replace 'BUILD_TIME', $buildTime | Set-Content main.go

          # 替换 COMMIT_ID_HASH 为当前Git提交的短哈希
          $commitHash = git rev-parse --short HEAD
          (Get-Content main.go) -replace 'COMMIT_ID_HASH', $commitHash | Set-Content main.go

          go mod tidy
          go build -o bin/m3u8dweb_windows_amd64.${{ github.ref_name }}.exe

      - name: run-test
        run: |
          ./bin/m3u8dweb_windows_amd64.${{ github.ref_name }}.exe --help

      - name: upload release m3u8dweb_windows_amd64
        uses: Guerra24/upload-to-release@v1
        with:
          name: m3u8dweb_windows_amd64.${{ github.ref_name }}.exe
          path: bin/m3u8dweb_windows_amd64.${{ github.ref_name }}.exe
          repo-token: ${{ secrets.GITHUB_TOKEN }}
  linux-amd64:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            ./go.sum
            ./go.sum

      - name: build
        run: |
          sed -i "s/VERSION_NO/${{ github.ref_name }}/g" main.go
          sed -i "s/BUILD_TIME/$(date +%Y-%m-%dT%H:%M:%S)/g" main.go
          sed -i "s/COMMIT_ID_HASH/$(git rev-parse --short HEAD)/g" main.go

          GOOS=linux GOARCH=amd64 go mod tidy
          GOOS=linux GOARCH=amd64 go build -o bin/m3u8dweb_linux_amd64.${{ github.ref_name }}
          file bin/m3u8dweb_linux_amd64.${{ github.ref_name }}

      - name: run-test
        run: |
          ./bin/m3u8dweb_linux_amd64.${{ github.ref_name }} --help

      - name: upload release m3u8d_linux_amd64
        uses: Guerra24/upload-to-release@v1
        with:
          name: m3u8dweb_linux_amd64.${{ github.ref_name }}
          path: bin/m3u8dweb_linux_amd64.${{ github.ref_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  linux-arm64_mipsle:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            ./go.sum
            ./go.sum

      - name: install queue
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support
          qemu-mipsel-static --version

      - name: build
        run: |
          sed -i "s/VERSION_NO/${{ github.ref_name }}/g" main.go
          sed -i "s/BUILD_TIME/$(date +%Y-%m-%dT%H:%M:%S)/g" main.go
          sed -i "s/COMMIT_ID_HASH/$(git rev-parse --short HEAD)/g" main.go

          GOOS=linux GOARCH=arm64 go mod tidy
          GOOS=linux GOARCH=arm64 go build -o bin/m3u8dweb_linux_arm64.${{ github.ref_name }}
          file bin/m3u8dweb_linux_arm64.${{ github.ref_name }}

          GOOS=linux GOARCH=mipsle go mod tidy
          GOOS=linux GOARCH=mipsle go build -o bin/m3u8dweb_linux_mipsle.${{ github.ref_name }}
          file bin/m3u8dweb_linux_mipsle.${{ github.ref_name }}

      - name: run-test
        run: |
          ./bin/m3u8dweb_linux_arm64.${{ github.ref_name }} --help
          #运行测试mipsle
          qemu-mipsel-static bin/m3u8dweb_linux_mipsle.${{ github.ref_name }} --help

      - name: upload release m3u8d_linux_arm64
        uses: Guerra24/upload-to-release@v1
        with:
          name: m3u8dweb_linux_arm64.${{ github.ref_name }}
          path: bin/m3u8dweb_linux_arm64.${{ github.ref_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: upload release m3u8d_linux_mipsle
        uses: Guerra24/upload-to-release@v1
        with:
          name: m3u8dweb_linux_mipsle.${{ github.ref_name }}
          path: bin/m3u8dweb_linux_mipsle.${{ github.ref_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  macos-arm64:
    # The type of runner that the job will run on
    runs-on: macos-14
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            ./go.sum
            ./go.sum

      - name: build
        run: |
          sed -i '' "s/VERSION_NO/${{ github.ref_name }}/g" main.go
          sed -i '' "s/BUILD_TIME/$(date +%Y-%m-%dT%H:%M:%S)/g" main.go
          sed -i '' "s/COMMIT_ID_HASH/$(git rev-parse --short HEAD)/g" main.go

          set GOOS=macos
          set GOARCH=arm64
          go mod tidy
          go build -o bin/m3u8dweb_macos_arm64.${{ github.ref_name }}

      - name: run-test
        run: |
          ./bin/m3u8dweb_macos_arm64.${{ github.ref_name }} --help

      - name: upload release m3u8d_macos_arm64
        uses: Guerra24/upload-to-release@v1
        with:
          name: m3u8dweb_macos_arm64.${{ github.ref_name }}
          path: bin/m3u8dweb_macos_arm64.${{ github.ref_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  macos-amd64:
    # The type of runner that the job will run on
    runs-on: macos-13
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            ./go.sum
            ./go.sum

      - name: build
        run: |
          sed -i '' "s/VERSION_NO/${{ github.ref_name }}/g" main.go
          sed -i '' "s/BUILD_TIME/$(date +%Y-%m-%dT%H:%M:%S)/g" main.go
          sed -i '' "s/COMMIT_ID_HASH/$(git rev-parse --short HEAD)/g" main.go

          set GOOS=macos
          set GOARCH=amd64
          go mod tidy
          go build -o bin/m3u8dweb_macos_amd64.${{ github.ref_name }}

      - name: run-test
        run: |
          ./bin/m3u8dweb_macos_amd64.${{ github.ref_name }} --help

      - name: upload release m3u8d_macos_amd64
        uses: Guerra24/upload-to-release@v1
        with:
          name: m3u8dweb_macos_amd64.${{ github.ref_name }}
          path: bin/m3u8dweb_macos_amd64.${{ github.ref_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}